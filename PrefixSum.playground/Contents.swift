import Foundation

/*
 Префиксные суммы — это техника, используемая в алгоритмах для оптимизации вычислений определённых операций над массивами. Она позволяет быстро вычислять суммы элементов подмассива за фиксированное время после предварительной обработки исходного массива.
 Префиксные суммы применяются, когда нужно многократно вычислять суммы элементов подмассива \( A[l..r] \).
 
 ### Преимущества

 1. **Скорость**: После предварительного вычисления префиксных сумм, сумма любых подмассива можно вычислить за \( O(1) \) времени.
 2. **Эффективность**: Это снижает время выполнения программы, особенно если запрашиваются суммы больших подмножеств элементов.

 ### Недостатки

 1. **Дополнительная память**: Создание массива префиксных сумм требует дополнительной памяти.
 2. **Необходимость предварительной обработки**: Если исходный массив изменяется, необходимо пересчитывать префиксные суммы.

 */


func makePrefixSum(nums: [Int]) -> [Int] {
    var prefixSum = Array(repeating: 0, count: nums.count + 1)
    
    for i in 1..<nums.count {
        prefixSum[i] = prefixSum[i - 1] + nums[i - 1]
    }
    
    return prefixSum
}

let array = makePrefixSum(nums: [5,3,8,1,4,6])


func rsq(prefixSum: [Int], left: Int, right: Int) -> Int {
    return prefixSum[right] - prefixSum[left]
}


let b = rsq(prefixSum: array, left: 2, right: 5)
